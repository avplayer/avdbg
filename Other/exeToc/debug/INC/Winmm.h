

int __stdcall PlaySound(LPCTSTR pszSound,HMODULE hmod,DWORD fdwSound);
int __stdcall PlaySoundA(LPCTSTR pszSound,HMODULE hmod,DWORD fdwSound);
int __stdcall PlaySoundW(LPCTSTR pszSound,HMODULE hmod,DWORD fdwSound);
int __stdcall auxGetDevCaps(UINT_PTR uDeviceID,LPAUXCAPS lpCaps,UINT cbCaps);
int __stdcall auxGetNumDevs();
int __stdcall auxGetVolume(UINT uDeviceID,LPDWORD lpdwVolume);
int __stdcall auxOutMessage(UINT uDeviceID,UINT uMsg,DWORD_PTR dwParam1,DWORD_PTR dwParam2);
int __stdcall auxSetVolume(UINT uDeviceID,DWORD dwVolume);
int __stdcall joyConfigChanged(DWORD dwFlags);
int __stdcall joyGetDevCaps(UINT_PTR uJoyID,LPJOYCAPS pjc,UINT cbjc);
int __stdcall joyGetNumDevs();
int __stdcall joyGetPos(UINT uJoyID,LPJOYINFO pji);
int __stdcall joyGetPosEx(UINT uJoyID,LPJOYINFOEX pji);
int __stdcall joyGetThreshold(UINT uJoyID,LPUINT puThreshold);
int __stdcall joyReleaseCapture(UINT uJoyID);
int __stdcall joySetCapture(HWND hwnd,UINT uJoyID,UINT uPeriod,BOOL fChanged);
int __stdcall joySetThreshold(UINT uJoyID,UINT uThreshold);
int __stdcall mciExecute(LPCSTR pszCommand);
int __stdcall mciGetCreatorTask(MCIDEVICEID IDDevice);
int __stdcall mciGetDeviceID(LPCTSTR lpszDevice);
int __stdcall mciGetDeviceIDFromElementID(DWORD dwElementID,LPCTSTR lpstrType);
int __stdcall mciGetErrorString(DWORD fdwError,LPTSTR lpszErrorText,UINT cchErrorText);
int __stdcall mciGetYieldProc(MCIDEVICEID IDDevice,LPDWORD lpdwYieldData);
int __stdcall mciSendCommand(MCIDEVICEID IDDevice,UINT uMsg,DWORD fdwCommand,DWORD_PTR dwParam);
int __stdcall mciSendString(LPCTSTR lpszCommand,LPTSTR lpszReturnString,UINT cchReturn,HANDLE hwndCallback);
int __stdcall mciSendStringA(LPCTSTR IpstrCommand,LPTSTR IpstrReturnString,UINT uReturnLength,HANDLE hwndCallback);
int __stdcall mciSendStringW(LPCTSTR IpstrCommand,LPTSTR IpstrReturnString,UINT uReturnLength,HANDLE hwndCallback);
int __stdcall mciSetYieldProc(MCIDEVICEID IDDevice,YIELDPROC yp,DWORD dwYieldData);
int __stdcall midiConnect(HMIDI hMidi,HMIDIOUT hmo,LPVOID pReserved);
int __stdcall midiDisconnect(HMIDI hMidi,HMIDIOUT hmo,LPVOID pReserved);
int __stdcall midiInAddBuffer(HMIDIIN hMidiIn,LPMIDIHDR lpMidiInHdr,UINT cbMidiInHdr);
int __stdcall midiInClose(HMIDIIN hMidiIn);
int __stdcall midiInGetDevCaps(UINT_PTR uDeviceID,LPMIDIINCAPS lpMidiInCaps,UINT cbMidiInCaps);
int __stdcall midiInGetErrorText(MMRESULT wError,LPTSTR lpText,UINT cchText);
int __stdcall midiInGetID(HMIDIIN hmi,LPUINT puDeviceID);
int __stdcall midiInGetNumDevs();
int __stdcall midiInMessage(HMIDIIN deviceID,UINT msg,DWORD_PTR dw1,DWORD_PTR dw2);
int __stdcall midiInOpen(LPHMIDIIN lphMidiIn,UINT_PTR uDeviceID,DWORD_PTR dwCallback,DWORD_PTR dwCallbackInstance,DWORD dwFlags);
int __stdcall midiInPrepareHeader(HMIDIIN hMidiIn,LPMIDIHDR lpMidiInHdr,UINT cbMidiInHdr);
int __stdcall midiInReset(HMIDIIN hMidiIn);
int __stdcall midiInStart(HMIDIIN hMidiIn);
int __stdcall midiInStop(HMIDIIN hMidiIn);
int __stdcall midiInUnprepareHeader(HMIDIIN hMidiIn,LPMIDIHDR lpMidiInHdr,UINT cbMidiInHdr);
int __stdcall midiOutCacheDrumPatches(HMIDIOUT hmo,UINT wPatch,WORD* lpKeyArray,UINT wFlags);
int __stdcall midiOutCachePatches(HMIDIOUT hmo,UINT wBank,WORD* lpPatchArray,UINT wFlags);
int __stdcall midiOutClose(HMIDIOUT hmo);
int __stdcall midiOutGetDevCaps(UINT_PTR uDeviceID,LPMIDIOUTCAPS lpMidiOutCaps,UINT cbMidiOutCaps);
int __stdcall midiOutGetErrorText(MMRESULT mmrError,LPTSTR lpText,UINT cchText);
int __stdcall midiOutGetID(HMIDIOUT hmo,LPUINT puDeviceID);
int __stdcall midiOutGetNumDevs();
int __stdcall midiOutGetVolume(HMIDIOUT hmo,LPDWORD lpdwVolume);
int __stdcall midiOutLongMsg(HMIDIOUT hmo,LPMIDIHDR lpMidiOutHdr,UINT cbMidiOutHdr);
int __stdcall midiOutMessage(HMIDIOUT deviceID,UINT msg,DWORD_PTR dw1,DWORD_PTR dw2);
int __stdcall midiOutOpen(LPHMIDIOUT lphmo,UINT_PTR uDeviceID,DWORD_PTR dwCallback,DWORD_PTR dwCallbackInstance,DWORD dwFlags);
int __stdcall midiOutPrepareHeader(HMIDIOUT hmo,LPMIDIHDR lpMidiOutHdr,UINT cbMidiOutHdr);
int __stdcall midiOutReset(HMIDIOUT hmo);
int __stdcall midiOutSetVolume(HMIDIOUT hmo,DWORD dwVolume);
int __stdcall midiOutShortMsg(HMIDIOUT hmo,DWORD dwMsg);
int __stdcall midiOutUnprepareHeader(HMIDIOUT hmo,LPMIDIHDR lpMidiOutHdr,UINT cbMidiOutHdr);
int __stdcall midiStreamClose(HMIDISTRM hStream);
int __stdcall midiStreamOpen(LPHMIDISTRM lphStream,LPUINT puDeviceID,DWORD cMidi,DWORD_PTR dwCallback,DWORD_PTR dwInstance,DWORD fdwOpen);
int __stdcall midiStreamOut(HMIDISTRM hMidiStream,LPMIDIHDR lpMidiHdr,UINT cbMidiHdr);
int __stdcall midiStreamPause(HMIDISTRM hms);
int __stdcall midiStreamPosition(HMIDISTRM hms,LPMMTIME pmmt,UINT cbmmt);
int __stdcall midiStreamProperty(HMIDISTRM hm,LPBYTE lppropdata,DWORD dwProperty);
int __stdcall midiStreamRestart(HMIDISTRM hms);
int __stdcall midiStreamStop(HMIDISTRM hms);
int __stdcall mixerClose(HMIXER hmx);
int __stdcall mixerGetControlDetails(HMIXEROBJ hmxobj,LPMIXERCONTROLDETAILS pmxcd,DWORD fdwDetails);
int __stdcall mixerGetDevCaps(UINT_PTR uMxId,LPMIXERCAPS pmxcaps,UINT cbmxcaps);
int __stdcall mixerGetID(HMIXEROBJ hmxobj,UINT* puMxId,DWORD fdwId);
int __stdcall mixerGetLineControls(HMIXEROBJ hmxobj,LPMIXERLINECONTROLS pmxlc,DWORD fdwControls);
int __stdcall mixerGetLineInfo(HMIXEROBJ hmxobj,LPMIXERLINE pmxl,DWORD fdwInfo);
int __stdcall mixerGetNumDevs();
int __stdcall mixerMessage(HMIXER driverID,UINT uMsg,DWORD_PTR dwParam1,DWORD_PTR dwParam2);
int __stdcall mixerOpen(LPHMIXER phmx,UINT uMxId,DWORD_PTR dwCallback,DWORD_PTR dwInstance,DWORD fdwOpen);
int __stdcall mixerSetControlDetails(HMIXEROBJ hmxobj,LPMIXERCONTROLDETAILS pmxcd,DWORD fdwDetails);
int __stdcall mmioAdvance(HMMIO hmmio,LPMMIOINFO lpmmioinfo,UINT wFlags);
int __stdcall mmioAscend(HMMIO hmmio,LPMMCKINFO lpck,UINT wFlags);
int __stdcall mmioClose(HMMIO hmmio,UINT wFlags);
int __stdcall mmioCreateChunk(HMMIO hmmio,LPMMCKINFO lpck,UINT wFlags);
int __stdcall mmioDescend(HMMIO hmmio,LPMMCKINFO lpck,LPMMCKINFO lpckParent,UINT wFlags);
int __stdcall mmioFlush(HMMIO hmmio,UINT fuFlush);
int __stdcall mmioGetInfo(HMMIO hmmio,LPMMIOINFO lpmmioinfo,UINT wFlags);
int __stdcall mmioInstallIOProc(FOURCC fccIOProc,LPMMIOPROC pIOProc,DWORD dwFlags);
int __stdcall mmioOpen(LPTSTR szFilename,LPMMIOINFO lpmmioinfo,DWORD dwOpenFlags);
int __stdcall mmioRead(HMMIO hmmio,HPSTR pch,LONG cch);
int __stdcall mmioRename(LPCTSTR szFilename,LPCTSTR szNewFilename,const LPMMIOINFO lpmmioinfo,DWORD dwRenameFlags);
int __stdcall mmioSeek(HMMIO hmmio,LONG lOffset,int iOrigin);
int __stdcall mmioSendMessage(HMMIO hmmio,UINT wMsg,LPARAM lParam1,LPARAM lParam2);
int __stdcall mmioSetBuffer(HMMIO hmmio,LPSTR pchBuffer,LONG cchBuffer,UINT wFlags);
int __stdcall mmioSetInfo(HMMIO hmmio,LPMMIOINFO lpmmioinfo,UINT wFlags);
int __stdcall mmioStringToFOURCC(LPCTSTR sz,UINT wFlags);
int __stdcall mmioWrite(HMMIO hmmio,char _huge* pch,LONG cch);
int __stdcall sndPlaySound(LPCTSTR lpszSound,UINT fuSound);
int __stdcall timeBeginPeriod(UINT uPeriod);
int __stdcall timeEndPeriod(UINT uPeriod);
int __stdcall timeGetDevCaps(LPTIMECAPS ptc,UINT cbtc);
int __stdcall timeGetSystemTime(LPMMTIME pmmt,UINT cbmmt);
int __stdcall timeGetTime();
int __stdcall timeKillEvent(UINT uTimerID);
int __stdcall timeSetEvent(UINT uDelay,UINT uResolution,LPTIMECALLBACK lpTimeProc,DWORD_PTR dwUser,UINT fuEvent);
int __stdcall waveInAddBuffer(HWAVEIN hwi,LPWAVEHDR pwh,UINT cbwh);
int __stdcall waveInClose(HWAVEIN hwi);
int __stdcall waveInGetDevCaps(UINT_PTR uDeviceID,LPWAVEINCAPS pwic,UINT cbwic);
int __stdcall waveInGetErrorText(MMRESULT mmrError,LPTSTR pszText,UINT cchText);
int __stdcall waveInGetID(HWAVEIN hwi,LPUINT puDeviceID);
int __stdcall waveInGetNumDevs();
int __stdcall waveInGetPosition(HWAVEIN hwi,LPMMTIME pmmt,UINT cbmmt);
int __stdcall waveInMessage(HWAVEIN deviceID,UINT uMsg,DWORD_PTR dwParam1,DWORD_PTR dwParam2);
int __stdcall waveInOpen(LPHWAVEIN phwi,UINT_PTR uDeviceID,LPWAVEFORMATEX pwfx,DWORD_PTR dwCallback,DWORD_PTR dwCallbackInstance,DWORD fdwOpen);
int __stdcall waveInPrepareHeader(HWAVEIN hwi,LPWAVEHDR pwh,UINT cbwh);
int __stdcall waveInReset(HWAVEIN hwi);
int __stdcall waveInStart(HWAVEIN hwi);
int __stdcall waveInStop(HWAVEIN hwi);
int __stdcall waveInUnprepareHeader(HWAVEIN hwi,LPWAVEHDR pwh,UINT cbwh);
int __stdcall waveOutBreakLoop(HWAVEOUT hWaveOut);
int __stdcall waveOutClose(HWAVEOUT hWaveOut);
int __stdcall waveOutGetDevCaps(UINT_PTR uDeviceID,LPWAVEOUTCAPS pwoc,UINT cbwoc);
int __stdcall waveOutGetErrorText(MMRESULT mmrError,LPTSTR pszText,UINT cchText);
int __stdcall waveOutGetID(HWAVEOUT hwo,LPUINT puDeviceID);
int __stdcall waveOutGetNumDevs();
int __stdcall waveOutGetPitch(HWAVEOUT hWaveOut,LPDWORD pdwPitch);
int __stdcall waveOutGetPlaybackRate(HWAVEOUT hwo,LPDWORD pdwRate);
int __stdcall waveOutGetPosition(HWAVEOUT hWaveOut,LPMMTIME lpWaveHdr,UINT cbWaveHdr);
int __stdcall waveOutGetVolume(HWAVEOUT hwo,LPDWORD pdwVolume);
int __stdcall waveOutMessage(HWAVEOUT deviceID,UINT uMsg,DWORD_PTR dwParam1,DWORD_PTR dwParam2);
int __stdcall waveOutOpen(LPHWAVEOUT phwo,UINT_PTR uDeviceID,LPWAVEFORMATEX pwfx,DWORD_PTR dwCallback,DWORD_PTR dwInstance,DWORD fdwOpen);
int __stdcall waveOutPause(HWAVEOUT hWaveOut);
int __stdcall waveOutPrepareHeader(HWAVEOUT hWaveOut,LPWAVEHDR lpWaveHdr,UINT cbWaveHdr);
int __stdcall waveOutReset(HWAVEOUT hWaveOut);
int __stdcall waveOutRestart(HWAVEOUT hWaveOut);
int __stdcall waveOutSetPitch(HWAVEOUT hWaveOut,DWORD dwPitch);
int __stdcall waveOutSetPlaybackRate(HWAVEOUT hwo,DWORD dwRate);
int __stdcall waveOutSetVolume(HWAVEOUT hwo,DWORD dwVolume);
int __stdcall waveOutUnprepareHeader(HWAVEOUT hWaveOut,LPWAVEHDR lpWaveHdr,UINT cbWaveHdr);
int __stdcall waveOutWrite(HWAVEOUT hWaveOut,LPWAVEHDR lpWaveHdr,UINT cbWaveHdr);